	INCLUDE	START

	SUBTTL	UTILITY ROUTINES
TB13

	RADIX	10
*
*	STANDARD EQUATES
*
OPPOS1	EQU	$47		HEIGHT OF OPERATOR MESSAGE LINE #1
OPPOS2	EQU	$3C		HEIGHT OF OPERATOR MESSAGE LINE #2

	PUSHORG	ROMSAVE
*
*	READ PIA2 INTO REG.A (CONVERT TO LEFT-RIGHT, UP-DOWN)
*	 BIT 0 = UP	STANDARD ROBOTRON,SPLAT,BUBBLES JOYSTICK FORMAT
*	 BIT 1 = DOWN
*	 BIT 2 = LEFT
*	 BIT 3 = RIGHT
*	 BIT 4 = FIRE
*	 BIT 5 = BOMB
*
APIA2	PSHS	B
	LDA	PIA3	READ FIRE & SINI BOMB
	ANDA	#3	IN UPPER BITS 4 & 5
	ASLA
	ASLA
	ASLA
	ASLA
	LDB	PIA2	READ 7 POSITION JOYSTICK
	BITB	#$20	X DIRECTION, JOYSTICK CENTERED?
	BNE	50$	 BR=YES
	ORA	#%1000	ASSUME RIGHT DIRECTION
	BITB	#$80	TEST DIRECTION BIT
	BNE	50$	 BR=ASSUMPTION CORRECT
	EORA	#%1100	USE OTHER DIRECTION
50$	BITB	#$02	Y DIRECTION, JOYSTICK CENTERED?
	BNE	100$	 BR=YES
	ORA	#%0001	ASSUME UP DIRECTION
	BITB	#$08	TEST DIRECTION BIT
	BNE	100$	 BR=ASSUMPTION CORRECT
	EORA	#%0011	USE OTHER DIRECTION
100$	PULS	B,PC
*
* CMOS MOVE: DESTINATION=Y, SOURCE=X, COUNT=B
*
CMOSMV	PSHS	A	NEED A
1$	LDA	,X+	GET SOURCE
	EXG	X,Y	SWAP
	JSR	WCMOSA	RITE IT
	EXG	X,Y	SWAP BACK
	DECB		DONE?
	BNE	1$	NO,LOOP
	PULS	A,PC	RETURN CLEAN
*
* INIT CMOS: SAVES STATE
*
CMINI$	PSHS	X,Y,D	SAVE STATE
	LDX	#DEFALT POINT TO ROM
	LDY	#CMOS	POINT TO DESTINATION
	LDB	#DEFSIZ LENGTH
	BSR	CMOSMV	MOVE THEM ALL
	PULS	X,Y,D,PC ALL DONE

*
*
* DEFAULT HERE FOR NOW
*
DEFALT	FCB	$30	FIRST EXTRA SHIP AT
	FCB	$30	ADDITIONAL POINTS PER EXTRA SHIP
	FCB	$03	SHIPS PER GAME
	FCB	$05	DIFFICULTY OF PLAY
	FCB	$01	CONTINUOUS FIRE
	FCB	$01	HIGH SCORE TO DATE ALLOWED
	FCB	$03	CSELCT
	FCB	$01	SLOT1M
	FCB	$04	SLOT2M
	FCB	$01	SLOT3M
	FCB	$01	CUNITC
	FCB	$00	CUNITB
	FCB	$00	MINUNT
	FCB	$00	FACTORY SETTINGS
	FCB	$00	CLEAR AUDIT TOTALS
	FCB	$00	CLEAR HSTD
	FCB	$00	AUTOCYCLE
	FCB	$00	SET ATTRACT MODE MESSAGE
DEFSIZ	EQU	*-DEFALT

ADVSC	JSR	MAKCHK	DO THE CHECKSUM
	JSR	CLRSCR
2$	LDA	PIA0
	BITA	#2
	BNE	2$	WAIT FOR RELEASE
3$	LDA	SPECFN+3 CLEAR AUDITS??
	ANDA	#$F
	BEQ	4$
	CLR	SPECFN+3
	JSR	MAKCHK
	JSR	CLRSCR
	JSR	AUDCK4	CLEAR THE AUDIT TOTALS AND PRINT THE MESSAGE.
	LDA	#40
	JSR	NAPV
4$	LDA	SPECFN+5 CHECK AUDIT MESSAGE
	ANDA	#$F
	BEQ	6$	NOT THERE
	CLR	SPECFN+5
	BSR	MAKCHK
	BSR	RSHS	GO AND DO IT
* * *	JSR	RSHSV	GO AND DO IT
	LDA	#$40
	JSR	NAPV
6$	LDA	SPECFN+9 OPERATOR MESSAGE
	ANDA	#$F	LOOK AT RELEVANCE
	BEQ	5$
	CLR	SPECFN+9
	BSR	MAKCHK
* * *	JSR	CLRSCR	CLEAR THE SCREEN
* * *	LDA	#TXSETA
* * *	JSR	TEXT68	PRINT A PROMPTING MESSAGE
	BSR	OPENT	GET THE OPERATOR MESSAGE
* * *	LDA	$20
* * *	JSR	NAPV
* * *	JSR	OPCHK	FORM THE CHECK BYTE
* * *	LDX	#OMESUM	POINT
* * *	JSR	WCMOSA	AND STORE IT.
5$
* * *	LDA	SPECFN+11 ENTER GOD'S NAME??
* * *	ANDA	#$F
* * *	BEQ	8$
* * *	CLR	SPECFN+11
* * *	BSR	MAKCHK
* * *	JSR	CLRSCR	CLEAR THE SCREEN
* * *	LDA	#TXSETG
* * *	JSR	TEXT68	PRINT A PROMPTING MESSAGE
* * *	JSR	GODSET	GO AND DO IT
* * *	JSR	MKGODC	MAKE GODS CHECK BYTE
* * *8$
	LDA	SPECFN+7 AUTO CYCLE
	ANDA	#$F
	BEQ	9$
	CLR	SPECFN+7
	BSR	MAKCHK
	BSR	FSCHK
	JMP	AUTOCY
9$
	BSR	FSCHK
	BRA	CKCMOS

FSCHK	LDA	SPECFN+1
	ANDA	#$F	FACTORY SETTINGS??
	BEQ	33$
	INC	ADJSUM
	INC	ADJSUM	BASH THE CHECK BYTE...THIS WILL RESTORE.
	CLR	SPECFN+1 AND UNDO IT
33$	RTS

MAKCHK	PSHS	X,A
	BSR	FCHK	FIND THE NEW CHECKSUM.
	LDX	#ADJSUM
	JSR	WCMOSA
	PULS	X,A,PC

RSHS	NOP		reset high score table
	NOP
	RTS

OPENT	NOP		operator message entry
	NOP
	RTS

FCHK	PSHS	B,X,Y
	LDX	#CMOS
	LDY	#ENDADJ
	BSR	FCHK$
	PULS	B,X,Y,PC

FCHK$	STY	XTEMP
	CLRA
FCHK1	LDB	,X+
	ANDB	#$F
	PSHS	B
	ADDA	,S+
	CMPX	XTEMP	
	BNE	FCHK1
	ADDA	#$37	FUDGE FACTOR
	RTS		

CKADJ	BSR	FCHK
	PSHS	A
	LDX	#ADJSUM
	JSR	RCMOSA
	CMPA	,S+
	RTS

CKCMOS
* * *	BSR	OPTST	CHECK OPERATOR MESSAGE
	BSR	CKADJ	CHECK ADJ 
	BEQ	4$
	LDA	#WDATA
	STA	WDOG
	JSR	CMINI$
	LDA	#WDATA
	STA	WDOG
	BSR	MAKCHK
	LDA	#WDATA
	STA	WDOG
	JSR	CLRSCR	CLEAR THE SCREEN
	LDA	#WDATA
	STA	WDOG
	BSR	AUDCHK	CHECK FOR FAULTY AUDITS
* * *	JSR	CHKHSV	CHECK FOR FAULTY HIGH SCORES
* * *	JSR	CKHSV	NOW VALIDATE
	BSR	CKADJ
	BEQ	5$
	LDA	#TXIMES	TELL THE OPERATOR WHAT IS GOING ON.
1$	JSR	TEXT68
2$	LDA	#WDATA
	STA	WDOG
	LDA	PIA0	CHECK
	BITA	#2
	BEQ	2$	NOT PRESSED CONTINUE TO HANG
3$	JMP	INITALL	START HIM UP
4$
* * *	JSR	CKHSV	FIX UP THE HIGH SCORE AREA AND RETURN
	BRA	3$
5$	LDA	#TXREST
	BRA	1$

AUDCHK	LDX	#SLOT1
	LDB	#4	FOUR BAD BYTES IN AUDIT AREA AFTER RESET IS ENOUGH.
2$	LDA	,X+	GET A BYTE
	ANDA	#$F
	CMPA	#9	HEX???
	BLS	1$	NOPE
	DECB		ONE MORE
	BEQ	AUDCK4
1$	CMPX	#ENDBOK+6 DONE??
	BNE	2$ 
	RTS

AUDCK4	LDA	#TXBKRS
	JSR	TEXT68	PRINT IT
	LDX	#SLOT1
5$	CLR	,X+	AND CLEAR EM.
	CMPX	#ENDBOK+6
	BNE	5$
	RTS

*
* CMOS PRIMITIVE FOR READING
*
RCMOSA	LDA	1,X	GET LSB
	ANDA	#$0F	LEAVE ONLY LS
	PSHS	A	SAVE IT
	LDA	,X++	GET MSB + AUTO INC
	ASLA
	ASLA
	ASLA
	ASLA		SHIFT LS TO MSB
	ADDA	,S+	GET LSB + FIX STACK
	RTS		BYE
*
* READ CMOS INTO D POINTED TO BY X: A=X,X+1; B=X+2,X+3
*
RCMOSD	BSR	RCMOSA	GET THE FIRST BYTE+FALL THRU FOR 2ND
*
* READ CMOS INTO B POINTED TO BY X
*
RCMOSB	PSHS	A	SAVE A
	BSR	RCMOSA	GET IN A
	TFR	A,B	PUT IT IN B
	PULS	A,PC	DONE
*
* WRITE TO CMOS PRIMITIVE
*
WCMOSA	PSHS	A	SAVE WHATS TO BE WRITTEN
	STA	1,X	SAVE LSB
	LSRA		SHIFT MS TO LS
	LSRA
	LSRA
	LSRA
	STA	,X++	SAVE MSB AND AUTO INC
	PULS	A,PC	DONE
*
* WRITE CMOS FROM D TO X: A=X,X+1; B=X+2,X+3
*
WCMOSD	BSR	WCMOSA	DO IT AND FALL THRU FOR 2ND
*
* WRITE CMOS FROM B TO X
*
WCMOSB	PSHS	A	SAVE A
	TFR	B,A	MOVE B TO A
	BSR	WCMOSA	FAKE IT
	PULS	A,PC	DONE

*
* AUDIT: COUNT=A, COUNTER=B (1-7)
*
AUD1$	PSHS	D,X	SAVE STATE
	LDA	#$01	BUMP BY COUNT OF 1
	BRA	AUD2
AUD$	PSHS	D,X	SAVE STATE
AUD2	TST	AMDEMO	no audits in attract mode demo
	BNE	AUD3
	ANDB	#$0F	LIMIT TO 0-F
	ASLB		MAKE INTO 4X
	PSHS	B
	ASLB
	ADDB	,S+	6X
	LDX	#CMOS-4+$100 POINT TO START-6	(CREDITS TAKES UP 2)
	ABX		GET THE CORRECT DESTINATION
	BSR	RCMOSB
	PSHS	B
	BSR	RCMOSB
	PSHS	B
	BSR	RCMOSB
	PSHS	B
	ADDA	,S
	DAA
	STA	,S
	LDA	1,S
	ADCA	#0
	DAA
	STA	1,S
	LDA	2,S
	ADCA	#0
	DAA
	LEAX	-6,X
	BSR	WCMOSA
	PULS	B
	PULS	A
	BSR	WCMOSD
	PULS	A
AUD3	PULS	D,X,PC	CLEAN UP
*	

*
*
* ACRED: ADDS A CREDITS TO TOTAL CREDITS; 99 MAX
*
ACRED	PSHS	A,X	SAVE
	ADDA	CREDIT	GET PRESENT
	DAA		HUMANIZE
	BCC	1$	NO OVERFLOW
	LDA	#$99	YES, STAY AT 99
1$	STA	CREDIT	SAVE NEW COUNT
	LDX	#CREDST	BACKUP CREDITS
	JSR	WCMOSA
	LDX	#$106D	erase credit display without dma
	LDA	#2
2$	LDB	#$26
3$	CLR	D,X
	DECB
	BPL	3$
	DECA
	BPL	2$
	PULS	X,A,PC	GO BACK CLEAN
*
* COIN SLOT ROUTINES
*
COINR	PSHS	D,X	SAVE STATE
	LDB	#$03	3RD TOTALS(RIGHT COIN)
	BRA	COIN$	HANDLE BELOW
COINC	PSHS	D,X	SAVE STATE
	LDB	#$02	2ND TOTALS(CENTER COIN)
	BRA	COIN$	HANDLE BELOW
COINL	PSHS	D,X	SAVE STATE
	LDB	#$01	1ST TOTALS(LEFT COIN)
	ROUTINE	COIN$
	LDA	AMDEMO	save attract mode demo flag
	PSHS	A
	CLR	AMDEMO	flag as not in attract mode demo so audits get recorded
	TUNE	QCOIN	say "I hunger!"
	JSR	AUD1$	BUMP COUNT BY 1
	ASLB	DOUBLE	FOR CMOS
	LDX	#SLOT1M-2 POINT TO START-2
	ABX		REMOVE OFFSET
	JSR	RCMOSB	GET CORRECT SLOT X
	BSR	BCDHEX	CONVERT TO BINARY
	LDA	BUNITS	GET PRESENT BONUS UNITS
	PSHS	B	AND ADD PRESENT COUNT TO IT
	ADDA	,S
	STA	BUNITS	UPDATE
	LDA	CUNITS
	ADDA	,S+	GET PRESENT
	STA	CUNITS	UPDATE
	LDX	#MINUNT	GET MINIMUM UNITS
	JSR	RCMOSB	FROM CMOS
	BSR	BCDHEX	WORK IN BINARY
	PSHS	B	FOR CBA
	CMPA	,S+	ENOUGH?
	BCS	2$	YES, GIVE IT
	LDX	#CUNITC	HOW MANY?
	JSR	RCMOSB	GET IT
	BSR	BCDHEX	CONVERT TO HEX
	BSR	DIVAB	SAVE REMAINDER IN B
	PSHS	A	SAVE COUNT TO BE AWARDED FOR A WHILE
	STB	CUNITS	SAVE REMAINDER
	LDX	#CUNITB	BONUS REQUIRES HOW MANY?
	JSR	RCMOSB	IN B
	LDA	BUNITS	GET BONUS SO FAR
	BSR	BCDHEX	CONVERT TO BINARY
	BSR	DIVAB	DIVIDE
	TSTA		ANY YET?
	BEQ	1$	NO
	CLR	CUNITS	YES, RESET ANY EXTRA
	CLR	BUNITS
1$	ADDA	,S+	GET OTHER CREDITS EARNED
	DAA		HUMANIZE
	LDB	#$04	BUMP TOTPDC
	JSR	AUD$	BY THE COUNT PAID FOR
	JSR	ACRED	ADD TO CREDITS COUNTER
2$	PULS	A	restore attract mode demo flag
	STA	AMDEMO
	PULS	D,X,PC	CLEAN + GO
*
* DIVAB: A/B, REMAINDER IN B
*
DIVAB	PSHS	B	SAVE
	TSTB		ANY?
	BNE	1$	YES, HANDLE
	CLRA		NO, SET TO 0
	PULS	B,PC	CLEAN RETURN
1$	EXG	A,B	FOR DAA
	LDA	#$99	START-1
2$	ADDA	#$01	NEXT
	DAA		HUMANIZE
	SUBB	,S	TAKE AWAY N
	BCC	2$	LOOP TILL OVERFLOW
	ADDB	,S+	ADD REMAINDER + FIX STACK
	RTS		BTE

*
*BCD-HEX CONVERT
*A=BCD-HEX
BCDHEX	PSHS	A
	CLRA
1$	CMPB	#$10
	BLO	2$
	ADDA	#10
	SUBB	#$10
	BRA	1$
2$	PSHS	B
	ADDA	,S+
	TFR	A,B
	PULS	A,PC
*
*HEX-BCD CONVERT
*A=HEX-BCD
HEXBCD	PSHS	B
	TFR	A,B
	CLRA
1$	CMPB	#10
	BLO	2$
	ADDA	#$10
	DAA
	SUBB	#10
	BRA	1$
2$	PSHS	B
	ADDA	,S+
	DAA
	PULS	B,PC
*
* * *
	RADIX	16
* * *	END
	PULLORG	ROMSAVE

