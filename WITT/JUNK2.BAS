100 REM
200 REM This program produces a list of SCAN LINE numbers for each of eight points.
300 REM
400 REM    B-----F------J
410 REM   /.           /|	B to C is 3.0 feet high.
420 REM  A-----E------I |
430 REM  | C.....G....|.K	A to B is 2.125 feet wide.
440 REM  |.           |/
450 REM  D-----H------L		A to I is 5.0 feet long.
460 REM
470 REM  Distance ---->
480 REM
500 LINPUT "ENTER OUTPUT FILE NAME ";X$
510 OPEN X$ FOR OUTPUT AS FILE #2, ACCESS WRITE,ORGANIZATION SEQUENTIAL VARIABLE
520 REM PRINT #2,"*		FRACFrames,Size,Offset,OPXnnn,Mult"
530 REM PRINT #2,"	FDB	0,0,0,OPX024,0"
550 OLD_BIKER_Y_SIZE = 0
600 HEIGHT = 3.0
700 WIDTH  = 2.125
750 LENGTH = 5.0
800 TAIL_TO_HEAD = 3.0
805 CAMERA = 3.41
810 REM
820 REM	We observe that an 4'8" tall obstacle at 24.00 feet is $70 pixels
830 REM	(i.e. 112. pixels decimal) tall.
840 REM	Thus,
850 REM		             18' * 4.67'    N pixels
860 REM		$70 = 112. = ----------- * ---------
870 REM			         24'          foot
880 REM
890 REM	So,
900 REM		    112. * 24 pixels
910 REM		N = ----------------------- = 31.977 pixels/ft.
920 REM		       18 * 4.67 feet
930 REM
940 Y_PIX_PER_FOOT = 31.977
950 REM
960 REM	We observe that the black to black corners of the roadway (11.7' wide)
970 REM  are $51 (i.e. 81 decimal) bytes wide unexpanded, which is 162 pixels
980 REM	wide unexpanded, which is 324. pixels wide expanded.
981 REM Thus,
982 REM		       18' * 11.7'   N pixels
983 REM		324. = ----------- * --------
984 REM			    18'        foot
985 REM	So,
986 REM		N = 324. / 11.7' = 27.692 pixels/ft.
990 REM
1000 X_PIX_PER_FOOT = 27.692
1002 REM
1004 REM
1006 REM
1010 FOR DISTANCE = 4 TO 1000
1012 GOSUB 1020
1013 DISTANCE = DISTANCE + 3
1014 NEXT DISTANCE
1017 REM PRINT #2,"	FDB	$FFFF,0,0,OPX1000,0"
1018 CLOSE #2
1019 GOTO 32767
1020 REM
1030 REM	Scale the biker's height.
1040 REM
1050 BIKER_Y_SIZE = 18.0 * HEIGHT * Y_PIX_PER_FOOT / DISTANCE
1060 REM IF INT(DISTANCE) = INT(24) THEN 1200
1070 REM IF INT(DISTANCE) = INT(48) THEN 1200
1080 REM IF INT(DISTANCE) = INT(76) THEN 1200
1090 REM IF INT(DISTANCE) = INT(100) THEN 1200
1100 REM IF INT(DISTANCE) = INT(200) THEN 1200
1110 REM IF INT(DISTANCE) = INT(300) THEN 1200
1120 REM IF INT(DISTANCE) = INT(400) THEN 1200
1130 REM IF INT(DISTANCE) = INT(500) THEN 1200
1140 REM IF INT(DISTANCE) = INT(600) THEN 1200
1150 REM IF INT(DISTANCE) = INT(700) THEN 1200
1160 REM IF INT(DISTANCE) = INT(800) THEN 1200
1170 REM IF INT(DISTANCE) = INT(900) THEN 1200
1180 REM IF INT(DISTANCE) = INT(1000) THEN 1200
1190 REM IF INT(BIKER_Y_SIZE + 0.5) = INT(OLD_BIKER_Y_SIZE + 0.5) THEN 9950
1200 OLD_BIKER_Y_SIZE = BIKER_Y_SIZE
1210 REM
1220 REM		Scale the road width.
1230 REM
1240 ROAD_X_SIZE = 18 * 11.7 * X_PIX_PER_FOOT / DISTANCE
1300 REM
1310 REM
1320 REM
2000 Y_PLAYER = 96 + (3.42 / DISTANCE * (18 * Y_PIX_PER_FOOT / 3.42))
3000 Y_A = INT(Y_PLAYER - (HEIGHT / DISTANCE * (18 * Y_PIX_PER_FOOT / 3.42)) + 0.5)
3100 Y_B = Y_A
3200 Y_C = Y_A - INT((HEIGHT / DISTANCE * (18 * Y_PIX_PER_FOOT / 3.42))+0.5)
3300 Y_D = Y_C
3330 REM
3400 Y_I = INT(Y_PLAYER - (HEIGHT / (DISTANCE+LENGTH) * (18 * Y_PIX_PER_FOOT / 3.42)) + 0.5)
3500 Y_J = Y_I
3600 Y_K = Y_J - INT((HEIGHT / (DISTANCE+LENGTH) * (18 * Y_PIX_PER_FOOT / 3.42))+0.5)
3700 Y_L = Y_K
3750 REM
3800 Y_E = INT(Y_PLAYER - (HEIGHT / (DISTANCE+HEAD) * (18 * Y_PIX_PER_FOOT / 3.42)) + 0.5)
3850 Y_F = Y_E
3900 Y_G = Y_F - INT((HEIGHT / (DISTANCE+HEAD) * (18 * Y_PIX_PER_FOOT / 3.42))+0.5)
3950 Y_H = Y_G
4000 REM DELTA_Y = Y_D - Y_A
5000 REM
5100 REM		FDB the distance in fractional frames.
5200 REM
5300 FRACTURED_FRAMES = INT(DISTANCE * 64. + 0.5)
5400 REM PRINT #2,"	fdb	"+STR$(FRACTURED_FRAMES);
9210 REM
9220 REM		FDB the pixel size of the image at this distance.
9230 REM
9240 BIKER_Y_SIZE = INT(BIKER_Y_SIZE + 0.5)
9300 PRINT #2,"	fcb	"+STR$(BIKER_Y_SIZE+3)+".	; "+STR$(DISTANCE)
9310 REM
9320 REM		FDB the pixel offset of the image for the image centering.
9330 REM
9540 GOSUB 10000
9600 REM
9610 REM		FDB the track width multiplier.
9620 REM
9630 ROAD_MULTIPLIER = INT((ROAD_X_SIZE * 128. / 151.) + 0.5)
9640 IF ROAD_MULTIPLIER < 127 THEN 9680
9650 ROAD_MULTIPLIER = (INT(ROAD_MULTIPLIER/128)*256)+(ROAD_MULTIPLIER-(INT(ROAD_MULTIPLIER/128)*128))
9680 ROAD_X_SIZE = INT(ROAD_X_SIZE + 0.5)
9690 REM PRINT #2,","+STR$(ROAD_MULTIPLIER);
9700 REM
9710 REM		* Comments of Distance and Track width.
9720 REM
9740 REM PRINT #2,"	* "+STR$(DISTANCE)+" ft. ";
9750 REM PRINT #2,"Road Width = "+STR$(ROAD_X_SIZE)
9760 REM PRINT #2,"*					* Y_PLAYER=";INT(Y_PLAYER+0.5)
9800 REM PRINT #2,"*					* A)=";Y_A;" B)=";Y_B;" C)=";Y_C;" D)=";Y_D
9900 REM PRINT #2,"*					* E)=";Y_E;" F)=";Y_F;" G)=";Y_G;" H)=";Y_H
9910 REM PRINT #2,"*					* I)=";Y_I;" J)=";Y_J;" K)=";Y_K;" L)=";Y_L
9950 REM CONTINUE having skipped data for duplicate sizes.
9960 RETURN
10000 REM
10100 REM
10200 REM
10300 IF DISTANCE < 24 THEN 20240
10400 IF DISTANCE < 48 THEN 20480
10500 IF DISTANCE < 76 THEN 20760
10600 IF DISTANCE < 100 THEN 21000
10700 IF DISTANCE < 200 THEN 22000
10800 IF DISTANCE < 300 THEN 23000
10900 IF DISTANCE < 400 THEN 24000
11000 IF DISTANCE < 500 THEN 25000
11100 IF DISTANCE < 600 THEN 26000
11200 IF DISTANCE < 700 THEN 27000
11300 IF DISTANCE < 800 THEN 28000
11400 IF DISTANCE < 900 THEN 29000
11500 REM PRINT #2,",OPX1000";
11600 RETURN
20240 REM PRINT #2,",OPX024";
20250 RETURN
20480 REM PRINT #2,",OPX048";
20490 RETURN
20760 REM PRINT #2,",OPX076";
20770 RETURN
21000 REM PRINT #2,",OPX100";
21010 RETURN
22000 REM PRINT #2,",OPX200";
22010 RETURN
23000 REM PRINT #2,",OPX300";
23010 RETURN
24000 REM PRINT #2,",OPX400";
24010 RETURN
25000 REM PRINT #2,",OPX500";
25010 RETURN
26000 REM PRINT #2,",OPX600";
26010 RETURN
27000 REM PRINT #2,",OPX700";
27010 RETURN
28000 REM PRINT #2,",OPX800";
28010 RETURN
29000 REM PRINT #2,",OPX900";
29010 RETURN
32767 END
